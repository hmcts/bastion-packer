name: DevOps RDO Bastion Packer
jobs:
- job: Ubuntu1804
  pool:
    vmImage: 'ubuntu-18.04'

  steps:
  - checkout: self
  - task: AzureCLI@2
    displayName: Test and validate packer syntax
    inputs:
      azureSubscription: dts-management-sbox-intsvc
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        packer validate --syntax-only ubuntu.json

  - task: AzureCLI@2
    displayName: Build and publish packer image Sandbox
    inputs:
      azureSubscription: dts-management-sbox-intsvc
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az group create --location uksouth --name rdo-bastion-packer --subscription $(sbox_subscription_id)
        packer build -var 'client_id=$(client_id)' -var 'client_secret=$(client_secret)' -var 'tenant_id=$(tenant_id)' -var 'subscription_id=$(sbox_subscription_id)' -force ubuntu.json
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: AzureCLI@2
    displayName: Build and publish packer image NonProd
    inputs:
      azureSubscription: dts-management-nonprod-intsvc
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az group create --location uksouth --name rdo-bastion-packer --subscription $(nonprod_subscription_id)
        packer build -var 'client_id=$(client_id)' -var 'client_secret=$(client_secret)' -var 'tenant_id=$(tenant_id)' -var 'subscription_id=$(nonprod_subscription_id)' -force ubuntu.json
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: AzureCLI@2
    displayName: Build and publish packer image Prod
    inputs:
      azureSubscription: dts-management-prod-intsvc
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az group create --location uksouth --name rdo-bastion-packer --subscription $(prod_subscription_id)
        packer build -var 'client_id=$(client_id)' -var 'client_secret=$(client_secret)' -var 'tenant_id=$(tenant_id)' -var 'subscription_id=$(prod_subscription_id)' -force ubuntu.json
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))

name: Bastion Packer
jobs:
  - job: Linux
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        Ubuntu:
          os: Ubuntu
          templatePath: ubuntu.pkr.hcl
    steps:
      - checkout: self
      - task: AzureCLI@2.208.0
        displayName: Get latest azure image version
        name: get_azure_image_version
        inputs:
          azureSubscription: dts-management-prod-intsvc
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            AZURE_IMAGE_VERSION=$(az sig image-version list --gallery-image-definition bastion-ubuntu --gallery-name hmcts --resource-group hmcts-image-gallery-rg --query '[].{name:name}' -o tsv | sort -V | tail -n1)
            IFS=. read -r major minor patch <<<"$AZURE_IMAGE_VERSION"
            ((patch++))
            printf -v AZURE_IMAGE_VERSION '%d.%d.%d' "$major" "$minor" "$((patch))"
            echo $AZURE_IMAGE_VERSION
            echo "##vso[task.setvariable variable=azure_image_version;isoutput=true]$AZURE_IMAGE_VERSION"
      
      - task: riezebosch.Packer.PackerTool.PackerTool@0
        displayName: 'Install Packer'
        inputs:
          version: 1.9.1

      - task: riezebosch.Packer.Packer.Packer@0
        displayName: 'Validate'
        inputs:
          command: validate
          azureSubscription: dts-management-prod-intsvc

      - task: riezebosch.Packer.Packer.Packer@0
        displayName: 'Build'
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          templatePath: $(templatePath)
          command: build
          azureSubscription: dts-management-prod-intsvc
          variables: |
              azure_image_version=$(get_azure_image_version.azure_image_version)

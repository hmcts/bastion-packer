name: Bastion Packer

schedules:
  # Run once a week
  - cron: '0 3 * * 1'  # Every monday at 3am UTC
    displayName: Weekly scheduled build # friendly name given to a specific schedule
    branches:
      include:
      - master
    always: true

trigger:
  branches:
    include:
      - master
  paths:
    include:
    - azure-pipelines.yml
    - ubuntu.pkr.hcl
    - provision-bastion

pr:
  branches:
    include:
      - master

jobs:
  - job: Linux
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        Ubuntu:
          os: Ubuntu
          templatePath: ubuntu.pkr.hcl
    steps:
      - checkout: self
      - task: AzureCLI@2.208.0
        displayName: Get latest azure image version
        name: get_azure_image_version
        inputs:
          azureSubscription: dts-management-prod-intsvc
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            AZURE_IMAGE_VERSION=$(az sig image-version list --gallery-image-definition bastion-ubuntu --gallery-name hmcts --resource-group hmcts-image-gallery-rg --query '[].{name:name}' -o tsv | sort -V | tail -n1)
            IFS=. read -r major minor patch <<<"$AZURE_IMAGE_VERSION"
            ((patch++))
            printf -v AZURE_IMAGE_VERSION '%d.%d.%d' "$major" "$minor" "$((patch))"
            echo $AZURE_IMAGE_VERSION
            echo "##vso[task.setvariable variable=azure_image_version;isoutput=true]$AZURE_IMAGE_VERSION"
      
      - task: riezebosch.Packer.PackerTool.PackerTool@0
        displayName: 'Install Packer'
        inputs:
          version: 1.9.1

      - task: riezebosch.Packer.Packer.Packer@0
        displayName: 'Validate'
        inputs:
          command: validate
          azureSubscription: dts-management-prod-intsvc

      - task: riezebosch.Packer.Packer.Packer@0
        displayName: 'Build'
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          templatePath: $(templatePath)
          command: build
          azureSubscription: dts-management-prod-intsvc
          variables: |
              azure_image_version=$(get_azure_image_version.azure_image_version)

      - task: GitHubRelease@1
        displayName: Create GitHubRelease
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          gitHubConnection: 'GitHub Management - Full Repo Access'
          repositoryName: '$(Build.Repository.Name)'
          action: 'create'
          target: '$(Build.SourceVersion)'
          tagSource: 'userSpecifiedTag'
          tag: '$(get_azure_image_version.azure_image_version)'
          title: '$(get_azure_image_version.azure_image_version)'
          releaseNotesSource: inline
          releaseNotesInline: 'Regular maintenance updates for non-pinned packages'
          addChangeLog: true
          compareWith: 'lastFullRelease'